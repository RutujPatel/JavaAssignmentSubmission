public class StudentDao {
    private Connection cn;
    
    public StudentDao(Connection cn) {
        this.cn = cn;
    }
    
    // insert a new student record
    public boolean insert(Student student) {
        boolean flag = false;
        try {
            String sql = "insert into student(fname, lname, email, mobile, gender, password) values(?, ?, ?, ?, ?, ?)";
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.setString(1, student.getFname());
            ps.setString(2, student.getLname());
            ps.setString(3, student.getEmail());
            ps.setString(4, student.getMobile());
            ps.setString(5, student.getGender());
            ps.setString(6, student.getPassword());
            ps.executeUpdate();
            flag = true;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return flag;
    }
    
    // update an existing student record
    public boolean update(Student student) {
        boolean flag = false;
        try {
            String sql = "update student set fname=?, lname=?, email=?, mobile=?, gender=?, password=? where id=?";
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.setString(1, student.getFname());
            ps.setString(2, student.getLname());
            ps.setString(3, student.getEmail());
            ps.setString(4, student.getMobile());
            ps.setString(5, student.getGender());
            ps.setString(6, student.getPassword());
            ps.setInt(7, student.getId());
            ps.executeUpdate();
            flag = true;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return flag;
    }
    
    // delete a student record
    public boolean delete(int id) {
        boolean flag = false;
        try {
            String sql = "delete from student where id=?";
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.setInt(1, id);
            ps.executeUpdate();
            flag = true;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return flag;
    }
    
    // get a student record by id
    public Student getById(int id) {
        Student student = null;
        try {
            String sql = "select * from student where id=?";
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.setInt(1, id);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                student = new Student();
                student.setId(rs.getInt("id"));
                student.setFname(rs.getString("fname"));
                student.setLname(rs.getString("lname"));
                student.setEmail(rs.getString("email"));
                student.setMobile(rs.getString("mobile"));
                student.setGender(rs.getString("gender"));
                student.setPassword(rs.getString("password"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return student;
    }
    
    // get all student records
    public List<Student> getAll() {
        List<Student> list = new ArrayList<>();
        try {
            String sql = "select * from student";
            Statement stmt = cn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                Student student = new Student();
                student.setId(rs.getInt("id"));
                student.setFname(rs.getString("fname"));
                student.setLname(rs.getString("lname"));
                student.setEmail(rs.getString("email"));
